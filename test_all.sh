#!/bin/bash

echo "üß™ –ü–æ–ª–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã Telegram –±–æ—Ç–∞ –¥–ª—è TRC20 –ø–ª–∞—Ç–µ–∂–µ–π"
echo "=" * 70

# –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ
if [ -d "venv" ]; then
    source venv/bin/activate
    echo "‚úÖ –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ"
else
    echo "‚ùå –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"
    exit 1
fi

echo ""
echo "üîç 1. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Telegram API..."
python -c "
import requests
import config

try:
    response = requests.get(f'https://api.telegram.org/bot{config.TELEGRAM_BOT_TOKEN}/getMe', timeout=10)
    if response.status_code == 200:
        data = response.json()
        if data['ok']:
            bot_info = data['result']
            print(f'‚úÖ –ë–æ—Ç –∞–∫—Ç–∏–≤–µ–Ω: @{bot_info[\"username\"]} ({bot_info[\"first_name\"]})')
        else:
            print(f'‚ùå –û—à–∏–±–∫–∞ API: {data}')
    else:
        print(f'‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status_code}')
except Exception as e:
    print(f'‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}')
"

echo ""
echo "üîç 2. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Tron API..."
python -c "
from tron_tracker import TronTracker
import config

tracker = TronTracker()
print(f'API URL: {config.TRON_API_URL}')
print(f'API Key: {\"—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω\" if config.TRON_API_KEY else \"–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω\"}')

# –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
account_info = tracker.get_account_info('TTestAddress123456789012345678901234')
if account_info is not None:
    print('‚úÖ Tron API –ø–æ–¥–∫–ª—é—á–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç')
else:
    print('‚ö†Ô∏è  Tron API —Ä–∞–±–æ—Ç–∞–µ—Ç (—Ç–µ—Å—Ç–æ–≤—ã–π –∞–¥—Ä–µ—Å –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–π)')
"

echo ""
echo "üîç 3. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
python -c "
from database import Database

db = Database()
print('‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞')

# –¢–µ—Å—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
user_id = 99999
db.add_user(user_id, 'test_user', 'TTestAddress123456789012345678901234')
user = db.get_user(user_id)
if user:
    print('‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏ –ø–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Ä–∞–±–æ—Ç–∞–µ—Ç')

# –¢–µ—Å—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞
payment_id = db.add_pending_payment(user_id, 100.0, 'USDT', 'TTestAddress123456789012345678901234')
if payment_id:
    print('‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–µ–π —Ä–∞–±–æ—Ç–∞–µ—Ç')

# –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –ø–ª–∞—Ç–µ–∂–µ–π
payments = db.get_pending_payments('TTestAddress123456789012345678901234')
if len(payments) > 0:
    print('‚úÖ –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–µ–π —Ä–∞–±–æ—Ç–∞–µ—Ç')

print('‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ')
"

echo ""
echo "üîç 4. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞–º–∏..."
python -c "
from process_manager import ProcessManager

manager = ProcessManager()
processes = manager.find_bot_processes()
print(f'–ù–∞–π–¥–µ–Ω–æ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –±–æ—Ç–∞: {len(processes)}')

if len(processes) == 0:
    print('‚ÑπÔ∏è  –ë–æ—Ç –Ω–µ –∑–∞–ø—É—â–µ–Ω')
elif len(processes) == 1:
    print('‚úÖ –ó–∞–ø—É—â–µ–Ω –æ–¥–∏–Ω —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ - –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤ –Ω–µ—Ç')
else:
    print(f'‚ö†Ô∏è  –ù–∞–π–¥–µ–Ω–æ {len(processes)} —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤ - –≤–æ–∑–º–æ–∂–µ–Ω –∫–æ–Ω—Ñ–ª–∏–∫—Ç')

print('‚úÖ –°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞–º–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç')
"

echo ""
echo "üîç 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
python -c "
import config

print(f'Bot Token: {\"—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω\" if config.TELEGRAM_BOT_TOKEN else \"–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω\"}')
print(f'Tron API URL: {config.TRON_API_URL}')
print(f'Tron API Key: {\"—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω\" if config.TRON_API_KEY else \"–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω\"}')
print(f'–ò–Ω—Ç–µ—Ä–≤–∞–ª –ø—Ä–æ–≤–µ—Ä–∫–∏: {config.CHECK_INTERVAL} —Å–µ–∫—É–Ω–¥')
print(f'–ö–æ–Ω—Ç—Ä–∞–∫—Ç USDT: {config.USDT_CONTRACT_ADDRESS}')
print('‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞')
"

echo ""
echo "üîç 6. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
python -c "
import sys

required_modules = [
    'telegram', 'requests', 'sqlite3', 'dotenv', 
    'tronpy', 'aiohttp', 'schedule', 'psutil'
]

missing_modules = []
for module in required_modules:
    try:
        __import__(module)
        print(f'‚úÖ {module}')
    except ImportError:
        print(f'‚ùå {module}')
        missing_modules.append(module)

if missing_modules:
    print(f'\\n‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –º–æ–¥—É–ª–∏: {missing_modules}')
else:
    print('\\n‚úÖ –í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã')
"

echo ""
echo "üéØ –ò—Ç–æ–≥–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å:"
echo "=================="

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –±–æ—Ç–∞
python -c "
from process_manager import ProcessManager

manager = ProcessManager()
processes = manager.find_bot_processes()

if len(processes) == 0:
    print('üìä –°—Ç–∞—Ç—É—Å: –ë–æ—Ç –Ω–µ –∑–∞–ø—É—â–µ–Ω')
    print('üí° –î–ª—è –∑–∞–ø—É—Å–∫–∞: ./start_bot.sh')
elif len(processes) == 1:
    print('üìä –°—Ç–∞—Ç—É—Å: –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç')
    print('‚úÖ –ì–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!')
else:
    print('üìä –°—Ç–∞—Ç—É—Å: –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã')
    print('üí° –î–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è: ./stop_bot.sh && ./start_bot.sh')
"

echo ""
echo "üõ†Ô∏è  –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
echo "   ./start_bot.sh    - –∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞"
echo "   ./stop_bot.sh     - –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–æ—Ç–∞"
echo "   ./status_bot.sh   - –ø–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å"
echo "   ./monitor_bot.sh  - –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤"
echo "   ./test_all.sh     - —ç—Ç–æ—Ç —Ç–µ—Å—Ç"

echo ""
echo "üìñ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è:"
echo "   README.md              - –æ—Å–Ω–æ–≤–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è"
echo "   PROCESS_MANAGEMENT.md  - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–∞–º–∏"
echo "   demo_guide.md          - —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é"

echo ""
echo "üéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"

