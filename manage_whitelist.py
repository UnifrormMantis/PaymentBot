#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è whitelist –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ –±–æ—Ç–∞
–ü–æ–∑–≤–æ–ª—è–µ—Ç –¥–æ–±–∞–≤–ª—è—Ç—å/—É–¥–∞–ª—è—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ —Å–ø–∏—Å–∫–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö
"""

import sqlite3
import sys
from database import Database

class WhitelistManager:
    def __init__(self):
        self.db = Database()
    
    def add_user(self, user_id: int, username: str = None):
        """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ whitelist"""
        try:
            # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
            self.db.add_user(user_id, username, "")
            
            print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –¥–æ–±–∞–≤–ª–µ–Ω –≤ whitelist")
            if username:
                print(f"   Username: @{username}")
            
            return True
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {e}")
            return False
    
    def remove_user(self, user_id: int):
        """–£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ whitelist"""
        try:
            conn = self.db.get_connection()
            cursor = conn.cursor()
            
            # –£–¥–∞–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
            cursor.execute('DELETE FROM users WHERE user_id = ?', (user_id,))
            cursor.execute('DELETE FROM pending_payments WHERE user_id = ?', (user_id,))
            cursor.execute('DELETE FROM confirmed_payments WHERE user_id = ?', (user_id,))
            
            conn.commit()
            conn.close()
            
            print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} —É–¥–∞–ª–µ–Ω –∏–∑ whitelist")
            return True
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {e}")
            return False
    
    def list_users(self):
        """–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ whitelist"""
        try:
            conn = self.db.get_connection()
            cursor = conn.cursor()
            
            cursor.execute('''
                SELECT user_id, username, wallet_address, auto_mode, created_at
                FROM users 
                ORDER BY created_at DESC
            ''')
            users = cursor.fetchall()
            conn.close()
            
            if not users:
                print("üì≠ Whitelist –ø—É—Å—Ç")
                return
            
            print(f"üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≤ whitelist ({len(users)}):")
            print("=" * 80)
            
            for i, (user_id, username, wallet, auto_mode, created_at) in enumerate(users, 1):
                print(f"{i:2d}. ID: {user_id}")
                print(f"    Username: @{username if username else 'N/A'}")
                print(f"    Wallet: {wallet if wallet else 'N/A'}")
                print(f"    Auto mode: {'‚úÖ' if auto_mode else '‚ùå'}")
                print(f"    Added: {created_at}")
                print("-" * 40)
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {e}")
    
    def get_user_info(self, user_id: int):
        """–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ"""
        try:
            user_data = self.db.get_user(user_id)
            
            if not user_data:
                print(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ whitelist")
                return
            
            print(f"üë§ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ {user_id}:")
            print("=" * 50)
            print(f"Username: @{user_data.get('username', 'N/A')}")
            print(f"Wallet: {user_data.get('wallet_address', 'N/A')}")
            print(f"Auto mode: {'‚úÖ –í–∫–ª—é—á–µ–Ω' if user_data.get('auto_mode') else '‚ùå –í—ã–∫–ª—é—á–µ–Ω'}")
            print(f"Created: {user_data.get('created_at', 'N/A')}")
            
            # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–ª–∞—Ç–µ–∂–µ–π
            conn = self.db.get_connection()
            cursor = conn.cursor()
            
            cursor.execute('SELECT COUNT(*) FROM pending_payments WHERE user_id = ?', (user_id,))
            pending_count = cursor.fetchone()[0]
            
            cursor.execute('SELECT COUNT(*) FROM confirmed_payments WHERE user_id = ?', (user_id,))
            confirmed_count = cursor.fetchone()[0]
            
            conn.close()
            
            print(f"Pending payments: {pending_count}")
            print(f"Confirmed payments: {confirmed_count}")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ: {e}")
    
    def clear_whitelist(self):
        """–û—á–∏—Å—Ç–∫–∞ –≤—Å–µ–≥–æ whitelist"""
        try:
            conn = self.db.get_connection()
            cursor = conn.cursor()
            
            # –£–¥–∞–ª—è–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
            cursor.execute('DELETE FROM users')
            cursor.execute('DELETE FROM pending_payments')
            cursor.execute('DELETE FROM confirmed_payments')
            
            conn.commit()
            conn.close()
            
            print("‚úÖ Whitelist –æ—á–∏—â–µ–Ω")
            return True
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ whitelist: {e}")
            return False

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    if len(sys.argv) < 2:
        print("üîí –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ whitelist –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ –±–æ—Ç–∞")
        print("=" * 50)
        print()
        print("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:")
        print("  python manage_whitelist.py add <user_id> [username]  - –î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
        print("  python manage_whitelist.py remove <user_id>          - –£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
        print("  python manage_whitelist.py list                       - –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
        print("  python manage_whitelist.py info <user_id>             - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ")
        print("  python manage_whitelist.py clear                      - –û—á–∏—Å—Ç–∏—Ç—å whitelist")
        print()
        print("–ü—Ä–∏–º–µ—Ä—ã:")
        print("  python manage_whitelist.py add 123456789 @username")
        print("  python manage_whitelist.py remove 123456789")
        print("  python manage_whitelist.py list")
        return
    
    manager = WhitelistManager()
    command = sys.argv[1].lower()
    
    if command == "add":
        if len(sys.argv) < 3:
            print("‚ùå –£–∫–∞–∂–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!")
            print("–ü—Ä–∏–º–µ—Ä: python manage_whitelist.py add 123456789 @username")
            return
        
        try:
            user_id = int(sys.argv[2])
            username = sys.argv[3] if len(sys.argv) > 3 else None
            manager.add_user(user_id, username)
        except ValueError:
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!")
    
    elif command == "remove":
        if len(sys.argv) < 3:
            print("‚ùå –£–∫–∞–∂–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!")
            print("–ü—Ä–∏–º–µ—Ä: python manage_whitelist.py remove 123456789")
            return
        
        try:
            user_id = int(sys.argv[2])
            manager.remove_user(user_id)
        except ValueError:
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!")
    
    elif command == "list":
        manager.list_users()
    
    elif command == "info":
        if len(sys.argv) < 3:
            print("‚ùå –£–∫–∞–∂–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!")
            print("–ü—Ä–∏–º–µ—Ä: python manage_whitelist.py info 123456789")
            return
        
        try:
            user_id = int(sys.argv[2])
            manager.get_user_info(user_id)
        except ValueError:
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!")
    
    elif command == "clear":
        confirm = input("‚ö†Ô∏è  –í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—á–∏—Å—Ç–∏—Ç—å –≤–µ—Å—å whitelist? (yes/no): ")
        if confirm.lower() in ['yes', 'y', '–¥–∞', '–¥']:
            manager.clear_whitelist()
        else:
            print("‚ùå –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞")
    
    else:
        print(f"‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: {command}")
        print("–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã: add, remove, list, info, clear")

if __name__ == "__main__":
    main()





