#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –±–æ—Ç–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∫–æ—à–µ–ª—å–∫–æ–≤
"""

import config
import os

def optimize_settings():
    """–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø–ª–∞—Ç–µ–∂–µ–π"""
    
    print("üîß –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–Ø –ù–ê–°–¢–†–û–ï–ö –ë–û–¢–ê")
    print("=" * 50)
    
    # –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ—à–µ–ª—å–∫–æ–≤
    try:
        from database import Database
        db = Database()
        tracked_wallets = db.get_tracked_wallets()
        wallet_count = len(tracked_wallets)
    except:
        wallet_count = 1  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é
    
    print(f"üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö –∫–æ—à–µ–ª—å–∫–æ–≤: {wallet_count}")
    print()
    
    # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∏–Ω—Ç–µ—Ä–≤–∞–ª—É
    if wallet_count <= 5:
        recommended_interval = 30
        scenario = "–ù–µ–±–æ–ª—å—à–æ–π –ø—Ä–æ–µ–∫—Ç (1-5 –∫–æ—à–µ–ª—å–∫–æ–≤)"
    elif wallet_count <= 20:
        recommended_interval = 60
        scenario = "–°—Ä–µ–¥–Ω–∏–π –ø—Ä–æ–µ–∫—Ç (6-20 –∫–æ—à–µ–ª—å–∫–æ–≤)"
    elif wallet_count <= 50:
        recommended_interval = 120
        scenario = "–ë–æ–ª—å—à–æ–π –ø—Ä–æ–µ–∫—Ç (21-50 –∫–æ—à–µ–ª—å–∫–æ–≤)"
    else:
        recommended_interval = 300
        scenario = "–ö—Ä—É–ø–Ω–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ (50+ –∫–æ—à–µ–ª—å–∫–æ–≤)"
    
    print(f"üéØ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: {scenario}")
    print(f"‚è∞ –û–ø—Ç–∏–º–∞–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª: {recommended_interval} —Å–µ–∫—É–Ω–¥")
    print()
    
    # –†–∞—Å—á–µ—Ç—ã –¥–ª—è —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º–æ–≥–æ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞
    total_requests = 100000
    requests_per_day = (60 / recommended_interval) * 60 * 24 * max(wallet_count, 1)  # –ú–∏–Ω–∏–º—É–º 1 –∫–æ—à–µ–ª–µ–∫
    days_available = total_requests / requests_per_day
    avg_requests_per_payment = (60 / recommended_interval) * 60 + 2  # 1 —á–∞—Å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ + 2 –∑–∞–ø—Ä–æ—Å–∞
    payments_available = total_requests / (avg_requests_per_payment * max(wallet_count, 1))
    
    print(f"üìà –ü–†–û–ì–ù–û–ó –ü–†–ò –û–ü–¢–ò–ú–ê–õ–¨–ù–´–• –ù–ê–°–¢–†–û–ô–ö–ê–•:")
    print(f"   ‚Ä¢ –ó–∞–ø—Ä–æ—Å–æ–≤ –≤ –¥–µ–Ω—å: {requests_per_day:.0f}")
    print(f"   ‚Ä¢ –î–Ω–µ–π —Ä–∞–±–æ—Ç—ã: {days_available:.1f}")
    print(f"   ‚Ä¢ –ü–ª–∞—Ç–µ–∂–µ–π –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: {payments_available:.0f}")
    print()
    
    # –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å —Ç–µ–∫—É—â–∏–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
    current_interval = config.CHECK_INTERVAL
    current_requests_per_day = (60 / current_interval) * 60 * 24 * max(wallet_count, 1)
    current_days_available = total_requests / current_requests_per_day
    current_avg_requests_per_payment = (60 / current_interval) * 60 + 2
    current_payments_available = total_requests / (current_avg_requests_per_payment * max(wallet_count, 1))
    
    print(f"üìä –°–†–ê–í–ù–ï–ù–ò–ï –° –¢–ï–ö–£–©–ò–ú–ò –ù–ê–°–¢–†–û–ô–ö–ê–ú–ò:")
    print(f"   –¢–µ–∫—É—â–∏–π –∏–Ω—Ç–µ—Ä–≤–∞–ª: {current_interval}—Å")
    print(f"   –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π: {recommended_interval}—Å")
    print()
    print(f"   –¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:")
    print(f"   ‚Ä¢ –î–Ω–µ–π —Ä–∞–±–æ—Ç—ã: {current_days_available:.1f}")
    print(f"   ‚Ä¢ –ü–ª–∞—Ç–µ–∂–µ–π: {current_payments_available:.0f}")
    print()
    print(f"   –û–ø—Ç–∏–º–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:")
    print(f"   ‚Ä¢ –î–Ω–µ–π —Ä–∞–±–æ—Ç—ã: {days_available:.1f}")
    print(f"   ‚Ä¢ –ü–ª–∞—Ç–µ–∂–µ–π: {payments_available:.0f}")
    print()
    
    # –£–ª—É—á—à–µ–Ω–∏–µ
    days_improvement = days_available - current_days_available
    payments_improvement = payments_available - current_payments_available
    
    if days_improvement > 0:
        print(f"‚úÖ –£–õ–£–ß–®–ï–ù–ò–ï:")
        print(f"   ‚Ä¢ +{days_improvement:.1f} –¥–Ω–µ–π —Ä–∞–±–æ—Ç—ã")
        print(f"   ‚Ä¢ +{payments_improvement:.0f} –ø–ª–∞—Ç–µ–∂–µ–π")
    else:
        print(f"‚ÑπÔ∏è  –¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —É–∂–µ –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã")
    print()
    
    # –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫
    if recommended_interval != current_interval:
        print(f"üîß –ü–†–ï–î–õ–û–ñ–ï–ù–ò–ï –ò–ó–ú–ï–ù–ï–ù–ò–Ø –ù–ê–°–¢–†–û–ï–ö:")
        print(f"   –ò–∑–º–µ–Ω–∏—Ç—å CHECK_INTERVAL —Å {current_interval} –Ω–∞ {recommended_interval}")
        print()
        print(f"   –í —Ñ–∞–π–ª–µ .env –∏–∑–º–µ–Ω–∏—Ç–µ:")
        print(f"   CHECK_INTERVAL={recommended_interval}")
        print()
        
        # –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é –∏ –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏–µ
        response = input("–•–æ—Ç–∏—Ç–µ –ø—Ä–∏–º–µ–Ω–∏—Ç—å –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏? (y/n): ")
        if response.lower() == 'y':
            apply_optimal_settings(recommended_interval)
    else:
        print("‚úÖ –¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —É–∂–µ –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã!")

def apply_optimal_settings(new_interval):
    """–ü—Ä–∏–º–µ–Ω–∏—Ç—å –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"""
    
    env_file = '.env'
    
    if os.path.exists(env_file):
        # –ß–∏—Ç–∞–µ–º —Ç–µ–∫—É—â–∏–π —Ñ–∞–π–ª
        with open(env_file, 'r') as f:
            lines = f.readlines()
        
        # –û–±–Ω–æ–≤–ª—è–µ–º CHECK_INTERVAL
        updated_lines = []
        for line in lines:
            if line.startswith('CHECK_INTERVAL='):
                updated_lines.append(f'CHECK_INTERVAL={new_interval}\n')
            else:
                updated_lines.append(line)
        
        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
        with open(env_file, 'w') as f:
            f.writelines(updated_lines)
        
        print(f"‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã!")
        print(f"   CHECK_INTERVAL –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ {new_interval}")
        print(f"   –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞ –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π:")
        print(f"   ./stop_bot.sh && ./start_bot.sh")
    else:
        print("‚ùå –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω")

if __name__ == "__main__":
    optimize_settings()
